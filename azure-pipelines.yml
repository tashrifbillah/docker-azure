# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

jobs:
- job: azure_docker_integration
  timeoutInMinutes: 120

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    dockerId: tbillah
    imageName: tbillah/entry_point
    user: pnlbwh
    wd: /home


  steps:
  - task: Docker@2
    displayName: Login to Docker Hub
    inputs:
      command: login
      containerRegistry: dockerHub


  - task: CopyFiles@2
    displayName: 'Copy test configFile'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/equality-test.yaml'
      TargetFolder: '$(Agent.BuildDirectory)'

  
  - task: CopyFiles@2
    displayName: 'Copy container structure test'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/container-structure-test-linux-amd64'
      TargetFolder: '$(Agent.BuildDirectory)'



  - script: |
        docker build -t $(imageName):runTest -f Dockerfile.entrypoint --build-arg USER=$(user) .
    displayName: 'Build a docker image'
    failOnStderr: true

 
  - task: ContainerStructureTest@0
    displayName: Test container
    inputs:
      dockerRegistryServiceConnection: 'dockerHub'
      repository: 'tbillah/entry_point'
      tag: 'runTest'
      configFile: '$(Agent.BuildDirectory)/equality-test.yaml'
      failTaskOnFailedTests: true


